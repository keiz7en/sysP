# Generated by Django 5.2.7 on 2025-10-17 16:30

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('courses', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='TeacherProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('employee_id', models.CharField(max_length=20, unique=True)),
                ('department', models.CharField(max_length=100)),
                ('specialization', models.JSONField(default=list)),
                ('qualifications', models.JSONField(default=list)),
                ('experience_years', models.IntegerField(default=0)),
                ('hire_date', models.DateField(auto_now_add=True)),
                ('is_approved', models.BooleanField(default=False)),
                ('approved_at', models.DateTimeField(blank=True, null=True)),
                ('teaching_rating', models.DecimalField(decimal_places=2, default=0.0, max_digits=3)),
                ('student_satisfaction', models.DecimalField(decimal_places=2, default=0.0, max_digits=3)),
                ('course_completion_rate', models.DecimalField(decimal_places=2, default=0.0, max_digits=5)),
                ('teaching_style', models.CharField(choices=[('traditional', 'Traditional'), ('interactive', 'Interactive'), ('collaborative', 'Collaborative'), ('adaptive', 'Adaptive')], default='traditional', max_length=20)),
                ('preferred_tools', models.JSONField(default=list)),
                ('approved_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='approved_teachers', to=settings.AUTH_USER_MODEL)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='teacher_profile', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'teacher_profiles',
            },
        ),
        migrations.CreateModel(
            name='TeachingSchedule',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('day_of_week', models.CharField(choices=[('monday', 'Monday'), ('tuesday', 'Tuesday'), ('wednesday', 'Wednesday'), ('thursday', 'Thursday'), ('friday', 'Friday'), ('saturday', 'Saturday'), ('sunday', 'Sunday')], max_length=10)),
                ('start_time', models.TimeField()),
                ('end_time', models.TimeField()),
                ('classroom', models.CharField(blank=True, max_length=50)),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='courses.course')),
                ('teacher', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='schedules', to='teachers.teacherprofile')),
            ],
            options={
                'db_table': 'teaching_schedules',
            },
        ),
        migrations.CreateModel(
            name='TeacherPerformanceMetrics',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
                ('engagement_score', models.DecimalField(decimal_places=2, default=0.0, max_digits=5)),
                ('content_delivery_score', models.DecimalField(decimal_places=2, default=0.0, max_digits=5)),
                ('student_interaction_frequency', models.IntegerField(default=0)),
                ('feedback_response_time', models.DurationField(blank=True, null=True)),
                ('innovative_teaching_methods', models.IntegerField(default=0)),
                ('teacher', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='performance_metrics', to='teachers.teacherprofile')),
            ],
            options={
                'db_table': 'teacher_performance_metrics',
                'unique_together': {('teacher', 'date')},
            },
        ),
    ]
