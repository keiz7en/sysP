# Generated by Django 5.2.7 on 2025-10-17 16:30

import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='ChatbotIntent',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, unique=True)),
                ('description', models.TextField()),
                ('training_phrases', models.JSONField(default=list)),
                ('parameters', models.JSONField(default=list)),
                ('response_templates', models.JSONField(default=list)),
                ('requires_context', models.BooleanField(default=False)),
                ('context_dependencies', models.JSONField(default=list)),
                ('triggers_action', models.BooleanField(default=False)),
                ('action_function', models.CharField(blank=True, max_length=100)),
                ('recognition_accuracy', models.DecimalField(decimal_places=2, default=0.0, max_digits=5)),
                ('usage_frequency', models.IntegerField(default=0)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'db_table': 'chatbot_intents',
            },
        ),
        migrations.CreateModel(
            name='KnowledgeBase',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('category', models.CharField(max_length=50)),
                ('subcategory', models.CharField(blank=True, max_length=50)),
                ('question', models.TextField()),
                ('answer', models.TextField()),
                ('keywords', models.JSONField(default=list)),
                ('source_type', models.CharField(choices=[('manual', 'Manually Created'), ('scraped', 'Web Scraped'), ('document', 'Document Extracted'), ('faq', 'FAQ Import'), ('ai_generated', 'AI Generated')], max_length=20)),
                ('usage_count', models.IntegerField(default=0)),
                ('success_rate', models.DecimalField(decimal_places=2, default=0.0, max_digits=5)),
                ('last_updated', models.DateTimeField(auto_now=True)),
                ('related_topics', models.JSONField(default=list)),
                ('is_active', models.BooleanField(default=True)),
            ],
            options={
                'db_table': 'knowledge_base',
            },
        ),
        migrations.CreateModel(
            name='UserInteractionPattern',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('total_sessions', models.IntegerField(default=0)),
                ('total_messages', models.IntegerField(default=0)),
                ('average_session_duration', models.DurationField(blank=True, null=True)),
                ('preferred_topics', models.JSONField(default=list)),
                ('common_questions', models.JSONField(default=list)),
                ('interaction_times', models.JSONField(default=dict)),
                ('query_resolution_rate', models.DecimalField(decimal_places=2, default=0.0, max_digits=5)),
                ('satisfaction_score', models.DecimalField(decimal_places=2, default=0.0, max_digits=3)),
                ('help_seeking_behavior', models.CharField(blank=True, choices=[('proactive', 'Proactive'), ('reactive', 'Reactive'), ('exploratory', 'Exploratory')], max_length=15)),
                ('last_updated', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'user_interaction_patterns',
            },
        ),
        migrations.CreateModel(
            name='ChatbotAnalytics',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
                ('total_sessions', models.IntegerField(default=0)),
                ('total_messages', models.IntegerField(default=0)),
                ('unique_users', models.IntegerField(default=0)),
                ('intent_recognition_accuracy', models.DecimalField(decimal_places=2, default=0.0, max_digits=5)),
                ('response_satisfaction_rate', models.DecimalField(decimal_places=2, default=0.0, max_digits=5)),
                ('query_resolution_rate', models.DecimalField(decimal_places=2, default=0.0, max_digits=5)),
                ('top_intents', models.JSONField(default=list)),
                ('failed_queries', models.JSONField(default=list)),
                ('knowledge_gaps', models.JSONField(default=list)),
                ('user_engagement_metrics', models.JSONField(default=dict)),
                ('session_duration_stats', models.JSONField(default=dict)),
                ('improvement_areas', models.JSONField(default=list)),
                ('content_suggestions', models.JSONField(default=list)),
            ],
            options={
                'db_table': 'chatbot_analytics',
                'unique_together': {('date',)},
            },
        ),
        migrations.CreateModel(
            name='ChatSession',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('title', models.CharField(blank=True, max_length=200)),
                ('context_type', models.CharField(choices=[('general', 'General Inquiry'), ('course', 'Course Help'), ('career', 'Career Guidance'), ('technical', 'Technical Support'), ('admission', 'Admission Guidance'), ('academic', 'Academic Support')], default='general', max_length=20)),
                ('ai_model_version', models.CharField(default='1.0', max_length=20)),
                ('personality_mode', models.CharField(choices=[('friendly', 'Friendly'), ('professional', 'Professional'), ('encouraging', 'Encouraging'), ('tutor', 'Tutor Mode')], default='friendly', max_length=15)),
                ('is_active', models.BooleanField(default=True)),
                ('language', models.CharField(default='en', max_length=10)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('last_activity', models.DateTimeField(auto_now=True)),
                ('ended_at', models.DateTimeField(blank=True, null=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='chat_sessions', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'chat_sessions',
            },
        ),
        migrations.CreateModel(
            name='ChatMessage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('message_text', models.TextField()),
                ('message_type', models.CharField(choices=[('user', 'User Message'), ('assistant', 'AI Assistant'), ('system', 'System Message')], max_length=10)),
                ('intent_detected', models.CharField(blank=True, max_length=50)),
                ('confidence_score', models.DecimalField(blank=True, decimal_places=2, max_digits=3, null=True)),
                ('entities_extracted', models.JSONField(default=dict)),
                ('response_sources', models.JSONField(default=list)),
                ('generated_by_model', models.CharField(blank=True, max_length=20)),
                ('processing_time_ms', models.IntegerField(blank=True, null=True)),
                ('was_helpful', models.BooleanField(blank=True, null=True)),
                ('user_rating', models.IntegerField(blank=True, null=True)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('session', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='messages', to='chatbot.chatsession')),
            ],
            options={
                'db_table': 'chat_messages',
                'ordering': ['timestamp'],
            },
        ),
    ]
