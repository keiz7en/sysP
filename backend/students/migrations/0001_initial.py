# Generated by Django 5.2.7 on 2025-10-17 16:30

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('courses', '__first__'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='StudentProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('student_id', models.CharField(max_length=20, unique=True)),
                ('grade_level', models.CharField(blank=True, max_length=20)),
                ('enrollment_date', models.DateField(auto_now_add=True)),
                ('guardian_name', models.CharField(blank=True, max_length=100)),
                ('guardian_phone', models.CharField(blank=True, max_length=15)),
                ('guardian_email', models.EmailField(blank=True, max_length=254)),
                ('emergency_contact', models.CharField(blank=True, max_length=100)),
                ('emergency_phone', models.CharField(blank=True, max_length=15)),
                ('medical_info', models.TextField(blank=True)),
                ('current_gpa', models.DecimalField(decimal_places=2, default=0.0, max_digits=4)),
                ('total_credits', models.IntegerField(default=0)),
                ('academic_status', models.CharField(choices=[('active', 'Active'), ('probation', 'Academic Probation'), ('suspended', 'Suspended'), ('graduated', 'Graduated')], default='active', max_length=20)),
                ('learning_style', models.CharField(blank=True, choices=[('visual', 'Visual'), ('auditory', 'Auditory'), ('kinesthetic', 'Kinesthetic'), ('reading', 'Reading/Writing')], max_length=20)),
                ('preferred_difficulty', models.CharField(choices=[('easy', 'Easy'), ('medium', 'Medium'), ('hard', 'Hard'), ('adaptive', 'Adaptive')], default='adaptive', max_length=20)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='student_profile', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'student_profiles',
            },
        ),
        migrations.CreateModel(
            name='StudentBehaviorMetrics',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
                ('engagement_score', models.DecimalField(decimal_places=2, default=0.0, max_digits=5)),
                ('participation_level', models.CharField(choices=[('low', 'Low'), ('medium', 'Medium'), ('high', 'High')], max_length=10)),
                ('quiz_attempts', models.IntegerField(default=0)),
                ('average_response_time', models.DurationField(blank=True, null=True)),
                ('help_requests', models.IntegerField(default=0)),
                ('collaborative_activities', models.IntegerField(default=0)),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='behavior_metrics', to='students.studentprofile')),
            ],
            options={
                'db_table': 'student_behavior_metrics',
                'unique_together': {('student', 'date')},
            },
        ),
        migrations.CreateModel(
            name='LearningProgress',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('topic', models.CharField(max_length=200)),
                ('mastery_level', models.DecimalField(decimal_places=2, default=0.0, max_digits=5)),
                ('time_spent', models.DurationField()),
                ('last_interaction', models.DateTimeField(auto_now=True)),
                ('difficulty_adjustments', models.JSONField(default=list)),
                ('performance_trends', models.JSONField(default=list)),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='courses.course')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='learning_progress', to='students.studentprofile')),
            ],
            options={
                'db_table': 'learning_progress',
                'unique_together': {('student', 'course', 'topic')},
            },
        ),
        migrations.CreateModel(
            name='AttendanceRecord',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
                ('status', models.CharField(choices=[('present', 'Present'), ('absent', 'Absent'), ('late', 'Late'), ('excused', 'Excused')], max_length=10)),
                ('notes', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='courses.course')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='attendance_records', to='students.studentprofile')),
            ],
            options={
                'db_table': 'attendance_records',
                'unique_together': {('student', 'course', 'date')},
            },
        ),
        migrations.CreateModel(
            name='AcademicRecord',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('semester', models.CharField(max_length=20)),
                ('year', models.IntegerField()),
                ('grade', models.CharField(max_length=5)),
                ('credits', models.IntegerField()),
                ('gpa_points', models.DecimalField(decimal_places=2, max_digits=4)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='courses.course')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='academic_records', to='students.studentprofile')),
            ],
            options={
                'db_table': 'academic_records',
                'unique_together': {('student', 'course', 'semester', 'year')},
            },
        ),
    ]
